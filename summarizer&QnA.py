# -*- coding: utf-8 -*-
"""Copy of Summer Internship.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ZWSUJ7SxwsQ_4qHZ3kNQnYA0YUV1yJcE
"""

!pip install streamlit
!pip install newspaper3k
!pip install transformers
!pip install torch
!pip install pyngrok

!ngrok authtoken '2ioHXmktokW9gfi3pmfv5UgL7ri_4GZPmy6o5SdPNJcHk9EQ5'

import streamlit as st
from newspaper import Article
from transformers import pipeline
from pyngrok import ngrok

# Load the summarization and question-answering pipelines
summarizer = pipeline("summarization")
qa_pipeline = pipeline("question-answering")

def fetch_article(url):
    article = Article(url)
    article.download()
    article.parse()
    return article.text

def summarize_article(article_text):
    summary = summarizer(article_text, max_length=150, min_length=100, do_sample=False)
    return summary[0]['summary_text']

def answer_question(article_text, question):
    result = qa_pipeline(question=question, context=article_text)
    return result['answer']

# Create the Streamlit app
def run_app():
    st.title("Newsbot: Automated News Summarizer and QnA")

    url = st.text_input("Enter News Article URL")
    if st.button("Summarize Article"):
        if url:
            article_text = fetch_article(url)
            st.success("Article fetched successfully")
            summary = summarize_article(article_text)
            st.subheader("Summary")
            st.write(summary)

            question = st.text_input("Enter Your Question")
            if st.button("Answer Your Question"):
              answer = answer_question(article_text, question)
              st.subheader("Answer to Your Question")
              st.write(answer)
        else:
            st.error("Please enter a valid URL")

# Save the Streamlit app to a file
with open("app.py", "w") as f:
    f.write("""
import streamlit as st
from newspaper import Article
from transformers import pipeline

summarizer = pipeline("summarization")
qa_pipeline = pipeline("question-answering")

def fetch_article(url):
    article = Article(url)
    article.download()
    article.parse()
    return article.text

def summarize_article(article_text):
    summary = summarizer(article_text, max_length=150, min_length=100, do_sample=False)
    return summary[0]['summary_text']

def answer_question(article_text, question):
    result = qa_pipeline(question=question, context=article_text)
    return result['answer']

def run_app():
    st.title("Newsbot: Automated News Summarizer and QnA")

    url = st.text_input("Enter News Article URL")
    if st.button("Summarize Article"):
        if url:
            article_text = fetch_article(url)
            st.success("Article fetched successfully")
            summary = summarize_article(article_text)
            st.subheader("Summary")
            st.write(summary)

            question = st.text_input("Enter Your Question")
            if st.button("Answer Your Question"):
              answer = answer_question(article_text, question)
              st.subheader("Answer to Your Question")
              st.write(answer)
        else:
            st.error("Please enter a valid URL")

if __name__ == "__main__":
    run_app()
    """)

import streamlit as st
from newspaper import Article
from transformers import pipeline
from pyngrok import ngrok

# Load the summarization and question-answering pipelines
summarizer = pipeline("summarization")
qa_pipeline = pipeline("question-answering")

def fetch_article(url):
    article = Article(url)
    article.download()
    article.parse()
    return article.text

def summarize_article(article_text):
    summary = summarizer(article_text, max_length=150, min_length=100, do_sample=False)
    return summary[0]['summary_text']

def answer_question(article_text, question):
    result = qa_pipeline(question=question, context=article_text)
    return result['answer']

# Create the Streamlit app
def run_app():
    st.title("Newsbot: Automated News Summarizer and QnA")

    url = st.text_input("Enter News Article URL")
    if st.button("Fetch Article"):
        if url:
            article_text = fetch_article(url)
            st.success("Article fetched successfully")

            if st.button("Summarize Article"):
                summary = summarize_article(article_text)
                st.subheader("Summary")
                st.write(summary)

                question = st.text_input("Enter Your Question")
                if st.button("Answer Your Question"):
                    if question:
                        answer = answer_question(article_text, question)
                        st.subheader("Answer to Your Question")
                        st.write(answer)
                    else:
                        st.error("Please enter a question")
        else:
            st.error("Please enter a valid URL")

# Save the Streamlit app to a file
with open("NewsBot.py", "w") as f:
    f.write("""
import streamlit as st
from newspaper import Article
from transformers import pipeline

summarizer = pipeline("summarization")
qa_pipeline = pipeline("question-answering")

def fetch_article(url):
    article = Article(url)
    article.download()
    article.parse()
    return article.text

def summarize_article(article_text):
    summary = summarizer(article_text, max_length=150, min_length=100, do_sample=False)
    return summary[0]['summary_text']

def answer_question(article_text, question):
    result = qa_pipeline(question=question, context=article_text)
    return result['answer']

def run_app():
    st.title("Newsbot: Automated News Summarizer and QnA")

    url = st.text_input("Enter News Article URL")
    if st.button("Fetch Article"):
        if url:
            article_text = fetch_article(url)
            st.success("Article fetched successfully")

            if st.button("Summarize Article"):
                summary = summarize_article(article_text)
                st.subheader("Summary")
                st.write(summary)

                question = st.text_input("Enter Your Question")
                if st.button("Answer Your Question"):
                    if question:
                        answer = answer_question(article_text, question)
                        st.subheader("Answer to Your Question")
                        st.write(answer)
                    else:
                        st.error("Please enter a question")
        else:
            st.error("Please enter a valid URL")

if __name__ == "__main__":
    run_app()
    """)

# Terminate open tunnels if any
ngrok.kill()

# Set up a tunnel
public_url = ngrok.connect(addr='8501', bind_tls=True)
print(f"Streamlit App URL: {public_url}")

# Run Streamlit app
!streamlit run Newsbot.py &>/dev/null&